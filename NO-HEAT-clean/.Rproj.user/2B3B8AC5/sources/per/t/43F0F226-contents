###########################################################################################################
#Script Metadata
#Created by: Hajra Shahab
#About: 
#  --
#Version Log: 
#  --HS- 09/02/2025-- 
#Output: 
# --

#Files Output: 

###########################################################################################################
# Clear R environment every time you run a new batch 
rm(list = ls())

# Load required libraries
liby <- c("sqldf", "ggplot2", "rstudioapi", "questionr", "tidyverse", "dplyr", "here")
lapply(liby, require, character.only = TRUE)

# Set working directory
here::i_am("NO_HEAT_TAXI_TNC.Rproj") 

# Option settings
options(scipen = 100000)
options(sqldf.driver = "SQLite")
theme_set(theme_bw())

############################################################################################################

#read heat index files from heat_index analysis 

hot_days_2018 <- read.csv(here("Processed Data", "heat_index", "daily_combined_data_HI_precipitation_2018_2025-09-02.csv"), stringsAsFactors = FALSE)
hot_days_2019 <- read.csv(here("Processed Data", "heat_index", "daily_combined_data_HI_precipitation_2019_2025-09-02.csv"), stringsAsFactors = FALSE)
#hot_days_2023 <- read.csv(here("Processed Data", "heat_index", "daily_combined_data_HI_precipitation_2023_2025-09-02.csv"), stringsAsFactors = FALSE)
hot_days_2024 <- read.csv(here("Processed Data", "heat_index", "daily_combined_data_HI_precipitation_2024_2025-09-02.csv"), stringsAsFactors = FALSE)
#hot_days_2025 <- read.csv(here("Processed Data", "heat_index", "daily_combined_data_HI_precipitation_2025_2025-09-02.csv"), stringsAsFactors = FALSE)

hot_days_2019$date <- as.Date(hot_days_2019$date)
hot_days_2019$day_of_week <- weekdays(hot_days_2019$date)

#filter weekends
hot_days_2019_select_days <- hot_days_2019[!(hot_days_2019$day_of_week %in% c('Saturday', 'Sunday')),]

#define hot days categories
days_hot_2019 <- hot_days_2019_select_days %>%
  filter(!rainy_day == 1) %>%
  mutate(
    hot_1 = case_when(
      hi_max >= hi_max.90perc & hi_max >= 80 ~ 1,
      TRUE ~ 0
    ),
    hot_2 = case_when(
      hi_max >= 90 ~ 1,
      TRUE ~ 0
    ),
    hot_3 = case_when(
      hi_max >= 100 ~ 1,
      TRUE ~ 0
    ))

rainy_day <- as.Date(c("2019-07-22", "2019-07-23"))


days_hot_1_2019 <- days_hot_2019 %>%
  mutate(
    hot_1_date  = if_else(hot_1 == 1, date, as.Date(NA)),
    date_prior  = if_else(hot_1_date %in% rainy_day, NA_Date_, hot_1_date - 7),
    date_after  = if_else(hot_1_date %in% rainy_day, NA_Date_, hot_1_date + 7),
    date_prior  = as.character(date_prior),
    date_after  = as.character(date_after)
  )

days_hot_1_2019$date_prior = if_else(date_prior %in% rainy_day, as.character(NA), as.character(date_prior))
days_hot_1_2019$date_after = if_else(date_prior %in% rainy_day, as.character(NA), as.character(date_after))



list_hot_day_date <- days_2018_hot_days$date_hot
list_prior_day_date <- days_2018_hot_days$date_prior
list_after_day_date <- days_2018_hot_days$date_after

list_hot_day_complete <- hot_day_list_def1_2024$date_hot
list_control_day_complete <- unique(c(hot_day_list_def1_2024$date_prior, hot_day_list_def1_2024$date_after))


list_hot <- c(); list_prior <- c(); list_after <- c();

for(hot_date in hot_dates){
  
  
  date_prior_hot_check <- ifelse(date_prior %in% hot_dates & date_prior %in% feasible_days_yellow_trips_2019_List, 1,
                                 ifelse(!(date_prior %in% feasible_days_yellow_trips_2019_List), 1, 0))
  date_after_hot_check <- ifelse(date_after %in% hot_dates & date_after %in% feasible_days_yellow_trips_2019_List, 1,
                                 ifelse(!(date_after %in% feasible_days_yellow_trips_2019_List), 1, 0))
  
  list_hot <- c(list_hot, hot_date)
  
  if(date_prior_hot_check == 1){
    list_prior <- c(list_prior, NA)
  } else {
    list_prior <- c(list_prior, date_prior)
  }
  
  if(date_after_hot_check == 1){
    list_after <- c(list_after, NA)
  } else {
    list_after <- c(list_after, date_after)
  }
}

#filter rainy days and special events from dataset
feasible_days_yellow_trips_2019 <- spatial_daily_yellow_trips_2019_clean %>%
  filter(rainy_day == 0) %>%
  filter(special_events == 0) 
feasible_days_yellow_trips_2019_List <- as.list(feasible_days_yellow_trips_2019$date)

hot_daily_feasible_yellow_trips_2019 <- feasible_days_yellow_trips_2019 %>%
  filter(hot_day_warning == 1) 
hot_dates <- as.list(hot_daily_feasible_yellow_trips_2019$date)

df_output <- do.call('rbind', Map(data.frame, date_hot = list_hot, date_prior = list_prior, date_after = list_after))
rownames(df_output) <- NULL

fwrite(df_output, here(here("Intermediate Output", 
                            "yellow_taxi",
                            "list of complete and incomplete sets_warn_2019.csv")))


hot_day_list_def1_2024$complete <- ifelse(hot_day_list_def1_2024$date_prior == "" |
                                            hot_day_list_def1_2024$date_after == "", 0, 1)
